Canner
======

The canner provides a framework to talk to devices from different vendors running a variety of operating systems. Arbitrary commands can be issued to the device and the raw output is saved in files in the snapshot package. The canner extracts specific targeted information in a device-dependent manor to highlight the details of the network that is of interest to the operators. New commands can be added to the canner and new details can be extracted as needed by the operator. Additional details can also be extracted from historic snapshots provided the necessary commands were issued when the snapshot was taken.

The details of the device are identified as snapshot *tags*. Each tag has a *kind* to allow it to be compared with similar tags on different devices. Not all devices will have the same set of tags but many will have common tags. For instance, most devices will have a tag whose kind is *dns server* but only certain routers will have a tag whose kind is *BGP peer*. If a tag is created based on a dependency, the dependency should be referenced when the tag is created. This allows analysis tools to display related information to tags. As an example, once an interface IP address and prefix length are learned, the interface subnet can be calculated. The interface subnet tag is dependent on the interface address and this relation is used to show all of the interface addresses learned for a particular subnet.

Once the output of the issued commands are save, the *taggers* are invoked to generate the snapshot tags. Taggers are arbitrary scripts or programs written in any language that process the input file and send tag lines to standard output. They can be written in your favorite language, however, we do not provide a mechanism to compile your programs so interpreted languages or languages that are compiled at run time work best. Examples include python, ruby, perl, etc. We provide several taggers for you written in python as well as some rudimentary python libraries you can use to generate tags.

Each canner snapshot is saved in a special directory structure called a document package. This may be familiar to MacOSX users but the directories themselves are readable on any operating system. The package directory uses a .netcan extension for identification. Inside the directory, the configuration and command output files are stored. In the Contents directory, an Info.plist file contains an XML representation of the tags that were generated. This plist or Property List file is accessible through available libraries in various languages. See this `Wikipedia article <http://en.wikipedia.org/wiki/Property_list>`_ for more information. Also in the Contents directory is a Resources subdirectory that contains HTML versions of the files. The HTML files are generated in advance so that all of the logic that has to understand the format of vendor specific output is located in a single place. Programs like the netCannery viewer application for MacOSX can be vendor and file format agnostic.

